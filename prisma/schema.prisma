generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Addresses {
  id                 String  @id @default(uuid())
  street             String
  number             String
  floor              String?
  apartment          String?
  city               String
  state              String
  postal_code        String
  additional_comment String?
}

model Clients {
  id         String  @id @default(uuid())
  address_id String
  first_name String
  last_name  String
  phone      String
  email      String?

  @@index([address_id], map: "clients_address_id_idx")
}

model Kits {
  id              String    @id @default(uuid())
  name            String    @unique(map: "kits_name_unique")
  slug            String    @unique(map: "kits_slug_unique")
  price           Float
  expiration_date DateTime?
}

model Product_Images {
  id         String @id @default(uuid())
  product_id String
  image_url  String

  @@index([product_id], map: "product_images_product_id_idx")
}

model Products {
  id            String  @id @default(uuid())
  name          String  @unique(map: "products_name_unique")
  slug          String  @unique(map: "products_slug_unique")
  model         String
  description   String
  price         Float
  current_stock Int
  active        Boolean @default(true)
}

model Products_Kits {
  id         String @id @default(uuid())
  kit_id     String
  product_id String
  quantity   Int

  @@index([kit_id], map: "products_kits_kit_id_idx")
  @@index([product_id], map: "products_kits_product_id_idx")
}

model Quote_Details {
  id         String  @id @default(uuid())
  quote_id   String
  product_id String?
  quantity   Int
  unit_price Float
  kit_id     String?

  @@index([product_id], map: "quote_details_product_id_idx")
  @@index([quote_id], map: "quote_details_quote_id_idx")
}

model Technicians {
  id               String   @id @default(uuid())
  address_id       String
  first_name       String
  last_name        String
  phone            String
  email            String?
  dni              String
  criminal_records Boolean  @default(false)
  active           Boolean  @default(true)
  birthday         DateTime

  @@index([address_id], map: "technicians_address_id_idx")
}

model Technicians_Work_Orders {
  id              String @id @default(uuid())
  work_order_id   String
  technician_id   String
  technician_note Int?

  @@index([technician_id], map: "technicians_work_orders_technician_id_idx")
  @@index([work_order_id], map: "technicians_work_orders_work_order_id_idx")
}

model Users {
  id       String     @id @default(uuid())
  username String     @unique(map: "users_username_unique")
  password String
  role     Users_role
  active   Boolean?   @default(true)
}

model Work_Orders {
  id            String             @id @default(uuid())
  quote_id      String
  creation_date DateTime           @default(now())
  status        Work_Orders_status
  comments      String?
  work_note     Int?
}

model Quotes {
  id              String       @id(map: "quotes_pkey") @default(uuid())
  creation_date   DateTime     @default(now())
  total_amount    Float
  slug            String
  dolar_value     Float
  labor_cost      Float        @default(0)
  advance_payment Float        @default(0)
  state           quotes_state @default(Pending)
}

enum Work_Orders_status {
  Pending
  In_Progress @map("In Progress")
  Completed
  Canceled
}

enum Users_role {
  Admin
  Technician
  Client
  God
}

enum quotes_state {
  Pending
  Accepted
  Canceled
}
